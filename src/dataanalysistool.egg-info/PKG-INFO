Metadata-Version: 2.4
Name: dataanalysistool
Version: 0.1.0
Summary: A comprehensive Python-based data analysis tool with financial analysis capabilities
Home-page: https://github.com/yourusername/DataAnalysisTool
Author: Data Analysis Tool Team
Author-email: example@example.com
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Financial and Insurance Industry
Classifier: Intended Audience :: Science/Research
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Classifier: Topic :: Office/Business :: Financial :: Investment
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Requires-Dist: numpy>=1.26.0
Requires-Dist: pandas>=2.2.0
Requires-Dist: matplotlib>=3.8.0
Requires-Dist: seaborn>=0.13.0
Requires-Dist: plotly>=5.19.0
Requires-Dist: scikit-learn>=1.4.0
Requires-Dist: yfinance>=0.2.55
Requires-Dist: flask>=3.0.0
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# Data Analysis Tool

A comprehensive Python-based data analysis tool with a focus on financial data analysis, visualization, and statistical processing.

## Project Structure

```
DataAnalysisTool/
â”œâ”€â”€ data/                  # Sample datasets and user data
â”œâ”€â”€ docs/                  # Documentation
â”œâ”€â”€ src/                   # Source code
â”‚   â”œâ”€â”€ __init__.py
â”‚   â”œâ”€â”€ config.py          # Configuration settings
â”‚   â”œâ”€â”€ data_loader.py     # Data loading functionality
â”‚   â”œâ”€â”€ data_processor.py  # Data processing functionality
â”‚   â”œâ”€â”€ visualizer.py      # Visualization functionality
â”‚   â”œâ”€â”€ financial.py       # Financial analysis functionality
â”‚   â”œâ”€â”€ exporter.py        # Export functionality
â”‚   â”œâ”€â”€ utils.py           # Utility functions
â”‚   â””â”€â”€ ui/                # User interface components
â”‚       â”œâ”€â”€ __init__.py
â”‚       â”œâ”€â”€ cli.py         # Command-line interface
â”‚       â””â”€â”€ web.py         # Web dashboard
â”œâ”€â”€ tests/                 # Test cases
â”œâ”€â”€ setup.py               # Package installation script
â”œâ”€â”€ requirements.txt       # Dependencies
â””â”€â”€ README.md              # Project overview
```

## Features

- Data import from various sources (CSV, Excel, JSON, SQL, APIs)
- Financial data analysis with Yahoo Finance API integration
- Statistical analysis and data preprocessing
- Interactive data visualization
- Machine learning integration
- Automated reporting and insights
- Command-line and web-based interfaces

## Installation

```bash
# Clone the repository
git clone https://github.com/yourusername/DataAnalysisTool.git
cd DataAnalysisTool

# Create and activate a virtual environment (optional but recommended)
python -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate

# Install dependencies
pip install -r requirements.txt

# Install the package in development mode
pip install -e .
```

## Usage

### Command-line Interface

```bash
# Basic usage
dataanalysis --help

# Load data from a CSV file
dataanalysis load --file path/to/data.csv

# Perform financial analysis on a stock
dataanalysis finance --ticker AAPL --period 1y

# Generate a report
dataanalysis report --output report.pdf
```

### Python API

```python
from dataanalysistool import DataAnalyzer

# Create an analyzer instance
analyzer = DataAnalyzer()

# Load data
analyzer.load_data('path/to/data.csv')

# Perform analysis
analyzer.describe()
analyzer.visualize('histogram', column='value')

# Financial analysis
analyzer.load_stock('AAPL', period='1y')
analyzer.calculate_returns()
analyzer.plot_stock_price()

# Export results
analyzer.export_report('report.pdf')
```

### Web Dashboard

```bash
# Start the web dashboard
dataanalysis dashboard

# The dashboard will be available at http://localhost:5000
```

## Documentation

For detailed documentation, see the `docs/` directory or visit our [documentation website](https://dataanalysistool.readthedocs.io).

## License

This project is licensed under the MIT License - see the LICENSE file for details.
